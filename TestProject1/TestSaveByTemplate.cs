using MiniExcelLibs;
using MiniExcelLibs.OpenXml;
using MiniExcelTests.Helpers;

namespace MiniExcelTests;

public class TestSaveByTemplate
{
    // first sheet contains {{CID}}, second empty
    private const string ValidFileTwoSheets =
        "";

    // first sheet contains x.CID, second x.DID
    private const string ValidFileTwoSheetsWithTemplate =
        "";

    // contains C0.FAM, C0.FDRF on 2nd sheet
    private const string TwoSheetsWithC0 =
        "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";

    // x.CID, x.DID
    public const string BookWithFormula =
        "";

    public const string BookWithFormulaLink =
        "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";

    private const string SomeValue = "123";

    public TestSaveByTemplate()
    {
        System.Text.Encoding.RegisterProvider(System.Text.CodePagesEncodingProvider.Instance);
    }

    public static byte[] DecodeBase64(string value)
    {
        return string.IsNullOrEmpty(value) ? Array.Empty<byte>() : Convert.FromBase64String(value);
    }

    [Fact]
    public async Task Test_Applies_Ok_SingleSheet()
    {
        var stream = new MemoryStream();
        var dict = new Dictionary<string, object>
        {
            ["CID"] = SomeValue
        };
        const string sheet = "sheet1.xml";
        await stream.SaveAsByTemplateAsync(DecodeBase64(ValidFileTwoSheets), dict, new OpenXmlConfiguration { Sheet = sheet });
        stream.Position = 0;
        Assert.True(stream.Length > 0);
        var wasReplaced = ExcelContainsChecker.Contains(stream.ToArray(), new List<string> { SomeValue });
        Assert.True(wasReplaced);
    }

    [Fact]
    public async Task Test_Applies_Ok_FormulaLink()
    {
        var stream = new MemoryStream();
        var dict = new Dictionary<string, object>
        {
            ["CID"] = SomeValue
        };
        const string sheet = "sheet1.xml";
        await stream.SaveAsByTemplateAsync(DecodeBase64(BookWithFormulaLink), dict, new OpenXmlConfiguration { Sheet = sheet });
        stream.Position = 0;
        Assert.True(stream.Length > 0);
        var wasReplaced = ExcelContainsChecker.Contains(stream.ToArray(), new List<string> { SomeValue });
        Assert.True(wasReplaced);
    }

    [Fact]
    public async Task Test_Applies_Ok_SecondSingleSheet()
    {
        var dict2 = new Dictionary<string, object>
        {
            {"x", new[]
                {
                    new { DID = "123" },
                    new { DID = "456" },
                    new { DID = "789" },
                }
            }
        };

        var dict1 = new Dictionary<string, object>
        {
            {"x", new[]
                {
                    new { CID = "0001" },
                    new { CID = "0002" },
                    new { CID = "2222" },
                }
            }
        };

        var data1 = DecodeBase64(ValidFileTwoSheetsWithTemplate);
        var stream1 = new MemoryStream();
        const string sheet1 = "sheet1.xml";
        await stream1.SaveAsByTemplateAsync(data1, dict1, new OpenXmlConfiguration { Sheet = sheet1 });
        stream1.Position = 0;
        Assert.True(stream1.Length > 0);

        var data2 = stream1.ToArray();
        var stream = new MemoryStream();
        const string sheet2 = "sheet2.xml";
        await stream.SaveAsByTemplateAsync(data2, dict2, new OpenXmlConfiguration { Sheet = sheet2 });
        stream.Position = 0;
        Assert.True(stream.Length > 0);

        var outStream = stream;

        var items = ExcelContainsChecker.GetExistingValues(outStream.ToArray());
        Assert.True(items.Any());
        Assert.True(items.ContainsValue("456"));
    }

    [Fact]
    public async Task Test_Applies_Ok_SecondSheetC0()
    {
        var dict1 = new Dictionary<string, object>
        {
            {"C0", new[]
                {
                    new { FAM = "0001", FDRF = "0003" },
                    new { FAM = "0002", FDRF = "0004" }
                }
            }
        };

        var data2 = DecodeBase64(TwoSheetsWithC0);
        var stream = new MemoryStream();
        const string sheet2 = "sheet2.xml";
        await stream.SaveAsByTemplateAsync(data2, dict1, new OpenXmlConfiguration { Sheet = sheet2 });
        stream.Position = 0;
        Assert.True(stream.Length > 0);

        var outStream = stream;

        var items = ExcelContainsChecker.GetExistingValues(outStream.ToArray());
        Assert.True(items.Any());
        Assert.True(items.ContainsValue("0004"));
    }

    [Fact]
    public async Task Test_NotApplies_Ok_OtherSheet()
    {
        var stream = new MemoryStream();
        var dict = new Dictionary<string, object>
        {
            ["CID"] = SomeValue
        };
        const string sheet = "s2";
        await stream.SaveAsByTemplateAsync(DecodeBase64(ValidFileTwoSheets), dict, new OpenXmlConfiguration { Sheet = sheet });
        stream.Position = 0;
        Assert.True(stream.Length > 0);
        var wasReplaced = ExcelContainsChecker.Contains(stream.ToArray(), new List<string> { SomeValue });
        Assert.False(wasReplaced);
    }

    [Fact]
    public async Task Test_Applies_Ok_NoSheet()
    {
        var stream = new MemoryStream();
        var dict = new Dictionary<string, object>
        {
            ["CID"] = SomeValue
        };
        await stream.SaveAsByTemplateAsync(DecodeBase64(ValidFileTwoSheets), dict);
        stream.Position = 0;
        Assert.True(stream.Length > 0);
        var wasReplaced = ExcelContainsChecker.Contains(stream.ToArray(), new List<string> { SomeValue });
        Assert.True(wasReplaced);
    }

    [Fact]
    public async Task Test_Applies_Ok_Formula()
    {
        var stream = new MemoryStream();
        var dict = new Dictionary<string, object>
        {
            { "x", new object[]
            {
                new { CID = 123, DID = 124 },
                new { CID = 125, DID = 126 }
            }}
        };
        await stream.SaveAsByTemplateAsync(DecodeBase64(BookWithFormula), dict);
        stream.Position = 0;
        Assert.True(stream.Length > 0);
        var newValues = ExcelContainsChecker.GetExistingValues(stream.ToArray());
        // replaced successfully
        Assert.True(newValues.ContainsKey("125"));
    }
}