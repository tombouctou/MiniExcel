using MiniExcelLibs;
using MiniExcelLibs.OpenXml;
using MiniExcelTests.Helpers;

namespace MiniExcelTests;

public class TestSaveByTemplate
{
    private const string ValidFileTwoSheets =
        "";

    // x.CID, x.DID
    private const string BookWithFormula =
        "";

    private const string SomeValue = "123";

    public TestSaveByTemplate()
    {
        System.Text.Encoding.RegisterProvider(System.Text.CodePagesEncodingProvider.Instance);
    }

    public static byte[] DecodeBase64(string value)
    {
        return string.IsNullOrEmpty(value) ? Array.Empty<byte>() : Convert.FromBase64String(value);
    }

    [Fact]
    public async Task Test_Applies_Ok_SingleSheet()
    {
        var stream = new MemoryStream();
        var dict = new Dictionary<string, object>
        {
            ["CID"] = SomeValue
        };
        const string sheet = "sheet1.xml";
        await stream.SaveAsByTemplateAsync(DecodeBase64(ValidFileTwoSheets), dict, new OpenXmlConfiguration { Sheet = sheet });
        stream.Position = 0;
        Assert.True(stream.Length > 0);
        var wasReplaced = ExcelContainsChecker.Contains(stream.ToArray(), new List<string> { SomeValue });
        Assert.True(wasReplaced);
    }

    [Fact]
    public async Task Test_NotApplies_Ok_OtherSheet()
    {
        var stream = new MemoryStream();
        var dict = new Dictionary<string, object>
        {
            ["CID"] = SomeValue
        };
        const string sheet = "s2";
        await stream.SaveAsByTemplateAsync(DecodeBase64(ValidFileTwoSheets), dict, new OpenXmlConfiguration { Sheet = sheet });
        stream.Position = 0;
        Assert.True(stream.Length > 0);
        var wasReplaced = ExcelContainsChecker.Contains(stream.ToArray(), new List<string> { SomeValue });
        Assert.False(wasReplaced);
    }

    [Fact]
    public async Task Test_Applies_Ok_NoSheet()
    {
        var stream = new MemoryStream();
        var dict = new Dictionary<string, object>
        {
            ["CID"] = SomeValue
        };
        await stream.SaveAsByTemplateAsync(DecodeBase64(ValidFileTwoSheets), dict);
        stream.Position = 0;
        Assert.True(stream.Length > 0);
        var wasReplaced = ExcelContainsChecker.Contains(stream.ToArray(), new List<string> { SomeValue });
        Assert.True(wasReplaced);
    }

    [Fact]
    public async Task Test_Applies_Ok_Formula()
    {
        var stream = new MemoryStream();
        var dict = new Dictionary<string, object>
        {
            { "x", new object[]
            {
                new { CID = 123, DID = 124 },
                new { CID = 125, DID = 126 }
            }}
        };
        await stream.SaveAsByTemplateAsync(DecodeBase64(BookWithFormula), dict);
        stream.Position = 0;
        Assert.True(stream.Length > 0);
        var newValues = ExcelContainsChecker.GetExistingValues(stream.ToArray());
        // replaced successfully
        Assert.True(newValues.ContainsKey("125"));

        var ufolder = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);
        /*var fileStream = File.Create(ufolder + "\\Documents\\file.xlsx");
        stream.Seek(0, SeekOrigin.Begin);
        await stream.CopyToAsync(fileStream);
        fileStream.Close();*/
    }
}